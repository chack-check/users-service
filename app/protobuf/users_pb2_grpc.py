# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import users_pb2 as users__pb2


class UsersStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserById = channel.unary_unary(
                '/protousers.Users/GetUserById',
                request_serializer=users__pb2.GetUserByIdRequest.SerializeToString,
                response_deserializer=users__pb2.UserResponse.FromString,
                )
        self.GetUserByUsername = channel.unary_unary(
                '/protousers.Users/GetUserByUsername',
                request_serializer=users__pb2.GetUserByUsernameRequest.SerializeToString,
                response_deserializer=users__pb2.UserResponse.FromString,
                )
        self.GetUserByEmail = channel.unary_unary(
                '/protousers.Users/GetUserByEmail',
                request_serializer=users__pb2.GetUserByEmailRequest.SerializeToString,
                response_deserializer=users__pb2.UserResponse.FromString,
                )
        self.GetUserByToken = channel.unary_unary(
                '/protousers.Users/GetUserByToken',
                request_serializer=users__pb2.GetUserByTokenRequest.SerializeToString,
                response_deserializer=users__pb2.UserResponse.FromString,
                )
        self.GetUserByRefreshToken = channel.unary_unary(
                '/protousers.Users/GetUserByRefreshToken',
                request_serializer=users__pb2.GetUserByTokenRequest.SerializeToString,
                response_deserializer=users__pb2.UserResponse.FromString,
                )


class UsersServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByUsername(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByRefreshToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UsersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserById,
                    request_deserializer=users__pb2.GetUserByIdRequest.FromString,
                    response_serializer=users__pb2.UserResponse.SerializeToString,
            ),
            'GetUserByUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByUsername,
                    request_deserializer=users__pb2.GetUserByUsernameRequest.FromString,
                    response_serializer=users__pb2.UserResponse.SerializeToString,
            ),
            'GetUserByEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByEmail,
                    request_deserializer=users__pb2.GetUserByEmailRequest.FromString,
                    response_serializer=users__pb2.UserResponse.SerializeToString,
            ),
            'GetUserByToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByToken,
                    request_deserializer=users__pb2.GetUserByTokenRequest.FromString,
                    response_serializer=users__pb2.UserResponse.SerializeToString,
            ),
            'GetUserByRefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByRefreshToken,
                    request_deserializer=users__pb2.GetUserByTokenRequest.FromString,
                    response_serializer=users__pb2.UserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protousers.Users', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Users(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protousers.Users/GetUserById',
            users__pb2.GetUserByIdRequest.SerializeToString,
            users__pb2.UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protousers.Users/GetUserByUsername',
            users__pb2.GetUserByUsernameRequest.SerializeToString,
            users__pb2.UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protousers.Users/GetUserByEmail',
            users__pb2.GetUserByEmailRequest.SerializeToString,
            users__pb2.UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protousers.Users/GetUserByToken',
            users__pb2.GetUserByTokenRequest.SerializeToString,
            users__pb2.UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByRefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protousers.Users/GetUserByRefreshToken',
            users__pb2.GetUserByTokenRequest.SerializeToString,
            users__pb2.UserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
