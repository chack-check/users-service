name: CI/CD Stage

on:
  push:
    branches: [ "dev", "development" ]
  pull_request:
    branches: [ "dev", "development" ]

jobs:
  lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Build linting containers
      run: docker build -t chack-check-users-lint -f docker/Dockerfile.lint .

    - name: Run linting
      run: docker run --rm chack-check-users-lint
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Build tests
      run: docker compose -f docker-compose.test.yml build

    - name: Run tests
      run: docker compose -f docker-compose.test.yml run --rm app poetry run pytest
  build:
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ghcr.io/artemowkin/chack-users-service:latest
            ghcr.io/artemowkin/chack-users-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    name: Deploy
    needs: [ test, lint, build ]
    runs-on: ubuntu-latest
    steps:
      - name: Set the kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: https://master.k8s.chack-check.ru:6443
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: stage
          manifests:
            kubernetes/deployment.yml
            kubernetes/ingress.yml
            kubernetes/service.yml
          images: |
            ghcr.io/artemowkin/chack-users-service:${{ github.sha }}
      - name: Refresh graphql-mesh front-end service
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token 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" \
          --data '{"ref": "main"}' \
          https://api.github.com/repos/chack-check/client-diffaction-service/actions/workflows/cicd-stage.yml/dispatches
